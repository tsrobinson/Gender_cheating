test <- df_het[,-1]
test$taxrate <- 10
temp <- df_het[,-1]
temp$taxrate <- 20
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 30
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 40
test <- rbind(test,temp)
rm(temp)
install.packages("glmnet")
install.packages("glmnet")
install.packages("glmnet")
library(glmnet)
df_het[,-1]
a0_lasso <- cv.glmnet(y = df_het[,1], x= df_het[,-1], alpha=1, family='gaussian')
View(df_het)
df_het$gender_lab <- ifelse(df_het$gender_lab == "Female",1,0)
df_het$modes <- ifelse(df_het$modes == "Lab",1,0)
summary(country)
sumamry(df_het$country)
summary(df_het$country)
model.matrix(df_het)
as.matrix(df_het)
df_het$uk <- ifelse(df$country == "UK",1,0)
df_het$chile <- ifelse(df$country == "Chile",1,0)
df_het$russia <- ifelse(df$country == "Russia",1,0)
df_het$uk <- ifelse(df_het$country == "UK",1,0)
df_het$chile <- ifelse(df_het$country == "Chile",1,0)
df_het$russia <- ifelse(df_het$country == "Russia",1,0)
df_het$country <- NULL
set.seed(89)
vars <- c("percevaded", "taxrate", "gender_lab", "country", "modes", "offerdg", "mean.ncorrectret")
df_het <- df[df$auditrate == 0,vars]
df_het$gender_lab <- ifelse(df_het$gender_lab == "Female",1,0)
df_het$modes <- ifelse(df_het$modes == "Lab",1,0)
df_het$uk <- ifelse(df_het$country == "UK",1,0)
df_het$chile <- ifelse(df_het$country == "Chile",1,0)
df_het$russia <- ifelse(df_het$country == "Russia",1,0)
df_het$country <- NULL
# Define variables incl. outcome as column 1
df_het <- df_het[complete.cases(df_het[,vars]),]
set.seed(89)
vars <- c("percevaded", "taxrate", "gender_lab", "country", "modes", "offerdg", "mean.ncorrectret")
df_het <- df[df$auditrate == 0,vars]
# Define variables incl. outcome as column 1
df_het <- df_het[complete.cases(df_het[,vars]),]
# Convert to dummies for glmnet
df_het$gender_lab <- ifelse(df_het$gender_lab == "Female",1,0)
df_het$modes <- ifelse(df_het$modes == "Lab",1,0)
df_het$uk <- ifelse(df_het$country == "UK",1,0)
df_het$chile <- ifelse(df_het$country == "Chile",1,0)
df_het$russia <- ifelse(df_het$country == "Russia",1,0)
df_het$country <- NULL
# Build test dataset
test <- df_het[,-1]
test$taxrate <- 10
temp <- df_het[,-1]
temp$taxrate <- 20
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 30
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 40
test <- rbind(test,temp)
rm(temp)
# Run LASSO predictor algorithm
a0_lasso <- cv.glmnet(y = df_het[,1], x= df_het[,-1], alpha=1, family='gaussian')
y <- df_het[,1]
x <- as.matrix(df_het[,-1])
View(x)
Y <- df_het[,1]
X <- as.matrix(df_het[,-1])
a0_lasso <- cv.glmnet(y = Y, x= X, alpha=1, family='gaussian')
test <- X
test$taxrate <- 10
temp <- X
temp$taxrate <- 20
test <- rbind(test,temp)
temp <- X
temp$taxrate <- 30
test <- rbind(test,temp)
temp <- X
temp$taxrate <- 40
test <- rbind(test,temp)
rm(temp)
View(test)
test <- X
View(test)
test[1]<- 10
test <- df_het[,-1]
test$taxrate <- 10
temp <- df_het[,-1]
temp$taxrate <- 20
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 30
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 40
test <- rbind(test,temp)
test <- as.matrix(test)
rm(temp)
a0_lasso_pred <- predict(a0_lasso, newdata = test)
a0_lasso_pred <- predict(a0_lasso, newx = test)
View(a0_lasso_pred)
n <- length(test[,1])/4
CATE_estimates <- df_het[,-1] # get covar information
CATE_estimates$y10 <- a0_lasso_pred[1:n]
CATE_estimates$y20 <- a0_lasso_pred[(n+1):(2*n)]
CATE_estimates$y30 <- a0_lasso_pred[(2*n+1):(3*n)]
CATE_estimates$y40 <- a0_lasso_pred[(3*n+1):(4*n)]
CATE_estimates$t1 <- CATE_estimates$y20 - CATE_estimates$y10
CATE_estimates$t2 <- CATE_estimates$y30 - CATE_estimates$y10
CATE_estimates$t3 <- CATE_estimates$y40 - CATE_estimates$y10
hist <- CATE_estimates
hist <- hist[order(hist$t1),]
hist$id <- c(1:n)
# CATE Heterogeneity plot
effectsPlot <- ggplot(hist, aes(x=id, y = t1)) +
geom_line() +
geom_hline(yintercept= 0, linetype="dashed", color="red") +
geom_hline(yintercept = mean(hist$t1), color = "blue") +
labs(x="Individual",y = "CATE", title = "CATE = Yi,t=20 - Yi,t=10") +
theme_minimal()
## Create histogram plots
genderPlot <- ggplot(hist, aes(x=id, fill=gender_lab)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Gender") +
labs(y = "Count")
onlinePlot <- ggplot(hist, aes(x=id, fill=modes)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Mode") +
labs(y = "Count")
countryPlot <- ggplot(hist, aes(x=id, fill=country)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Country") +
labs(y = "Count")
# Combine all plots into one chart
figure <- ggarrange(effectsPlot, genderPlot, countryPlot, onlinePlot,
ncol = 1, nrow = 4, heights = c(2,1.3,1.3,1.3))
library(foreign)
library(ggplot2)
library(ggpubr)
library(readstata13)
library(RColorBrewer)
library(rms)
theme_set(theme_bw())
library(plyr)
library(effsize)
library(gridExtra)
library(FindIt)
library(BayesTree)
library(randomForest)
library(glmnet)
library(clusterSEs)
library(car)
library(Rmisc)
library(texreg)
library(xtable)
effectsPlot <- ggplot(hist, aes(x=id, y = t1)) +
geom_line() +
geom_hline(yintercept= 0, linetype="dashed", color="red") +
geom_hline(yintercept = mean(hist$t1), color = "blue") +
labs(x="Individual",y = "CATE", title = "CATE = Yi,t=20 - Yi,t=10") +
theme_minimal()
## Create histogram plots
genderPlot <- ggplot(hist, aes(x=id, fill=gender_lab)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Gender") +
labs(y = "Count")
onlinePlot <- ggplot(hist, aes(x=id, fill=modes)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Mode") +
labs(y = "Count")
countryPlot <- ggplot(hist, aes(x=id, fill=country)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Country") +
labs(y = "Count")
# Combine all plots into one chart
figure <- ggarrange(effectsPlot, genderPlot, countryPlot, onlinePlot,
ncol = 1, nrow = 4, heights = c(2,1.3,1.3,1.3))
View(CATE_estimates)
summary(df$country)
CATE_estimates$country <- ifelse(CATE_estimates$uk == 1,"UK",
ifelse(CATE_estimates$chile == 1, "Chile",
ifelse(CATE_estimates$russia == 1, "Russia","USA")))
CATE_estimates$gender_lab <- ifelse(CATE_estimates$gender_lab == 1,"Female","Male")
## Set up CATE dataframe for plots
# get covar information
CATE_estimates <- df_het[,-1]
# Consolidate dummy variables
CATE_estimates$country <- ifelse(CATE_estimates$uk == 1,"UK",
ifelse(CATE_estimates$chile == 1, "Chile",
ifelse(CATE_estimates$russia == 1, "Russia","USA")))
CATE_estimates$gender_lab <- ifelse(CATE_estimates$gender_lab == 1,"Female","Male")
# Recover CATE estimates
n <- length(test[,1])/4
CATE_estimates$y10 <- a0_lasso_pred[1:n]
CATE_estimates$y20 <- a0_lasso_pred[(n+1):(2*n)]
CATE_estimates$y30 <- a0_lasso_pred[(2*n+1):(3*n)]
CATE_estimates$y40 <- a0_lasso_pred[(3*n+1):(4*n)]
CATE_estimates$t1 <- CATE_estimates$y20 - CATE_estimates$y10
CATE_estimates$t2 <- CATE_estimates$y30 - CATE_estimates$y10
CATE_estimates$t3 <- CATE_estimates$y40 - CATE_estimates$y10
hist <- CATE_estimates
hist <- hist[order(hist$t1),]
hist$id <- c(1:n)
# CATE Heterogeneity plot
effectsPlot <- ggplot(hist, aes(x=id, y = t1)) +
geom_line() +
geom_hline(yintercept= 0, linetype="dashed", color="red") +
geom_hline(yintercept = mean(hist$t1), color = "blue") +
labs(x="Individual",y = "CATE", title = "CATE = Yi,t=20 - Yi,t=10") +
theme_minimal()
## Create histogram plots
genderPlot <- ggplot(hist, aes(x=id, fill=gender_lab)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Gender") +
labs(y = "Count")
onlinePlot <- ggplot(hist, aes(x=id, fill=modes)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Mode") +
labs(y = "Count")
countryPlot <- ggplot(hist, aes(x=id, fill=country)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Country") +
labs(y = "Count")
# Combine all plots into one chart
figure <- ggarrange(effectsPlot, genderPlot, countryPlot, onlinePlot,
ncol = 1, nrow = 4, heights = c(2,1.3,1.3,1.3))
plot(figure)
ggsave(figure, filename = "Figures/LASSO_plot_t1.png", device = "png", height = 8, width = 6)
set.seed(89)
vars <- c("percevaded", "taxrate", "gender_lab", "country", "modes", "offerdg", "mean.ncorrectret")
df_het <- df[df$auditrate == 0,vars]
# Define variables incl. outcome as column 1
df_het <- df_het[complete.cases(df_het[,vars]),]
# Convert to dummies for glmnet
df_het$gender_lab <- ifelse(df_het$gender_lab == "Female",1,0)
df_het$modes <- ifelse(df_het$modes == "Lab",1,0)
df_het$uk <- ifelse(df_het$country == "UK",1,0)
df_het$chile <- ifelse(df_het$country == "Chile",1,0)
df_het$russia <- ifelse(df_het$country == "Russia",1,0)
df_het$country <- NULL
Y <- df_het[,1]
X <- as.matrix(df_het[,-1])
# Build test dataset
test <- df_het[,-1]
test$taxrate <- 10
temp <- df_het[,-1]
temp$taxrate <- 20
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 30
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 40
test <- rbind(test,temp)
test <- as.matrix(test)
rm(temp)
# Run LASSO predictor algorithm
a0_lasso <- cv.glmnet(y = Y, x= X, alpha=1, family='gaussian')
# Predict on full schedule of possible treatment-covariate profiles
a0_lasso_pred <- predict(a0_lasso, newx = test)
## Set up CATE dataframe for plots
# get covar information
CATE_estimates <- df_het[,-1]
# Consolidate dummy variables
CATE_estimates$country <- ifelse(CATE_estimates$uk == 1,"UK",
ifelse(CATE_estimates$chile == 1, "Chile",
ifelse(CATE_estimates$russia == 1, "Russia","USA")))
CATE_estimates$gender_lab <- ifelse(CATE_estimates$gender_lab == 1,"Female","Male")
# Recover CATE estimates
n <- length(test[,1])/4
CATE_estimates$y10 <- a0_lasso_pred[1:n]
CATE_estimates$y20 <- a0_lasso_pred[(n+1):(2*n)]
CATE_estimates$y30 <- a0_lasso_pred[(2*n+1):(3*n)]
CATE_estimates$y40 <- a0_lasso_pred[(3*n+1):(4*n)]
CATE_estimates$t1 <- CATE_estimates$y20 - CATE_estimates$y10
CATE_estimates$t2 <- CATE_estimates$y30 - CATE_estimates$y10
CATE_estimates$t3 <- CATE_estimates$y40 - CATE_estimates$y10
## LASSO plot - t1
# Duplicate dataframe and order treatment effects
hist <- CATE_estimates
hist <- hist[order(hist$t1),]
hist$id <- c(1:n)
# CATE Heterogeneity plot
effectsPlot <- ggplot(hist, aes(x=id, y = t1)) +
geom_line() +
geom_hline(yintercept= 0, linetype="dashed", color="red") +
geom_hline(yintercept = mean(hist$t1), color = "blue") +
labs(x="Individual",y = "CATE", title = "CATE = Yi,t=20 - Yi,t=10") +
theme_minimal()
## Create histogram plots
genderPlot <- ggplot(hist, aes(x=id, fill=gender_lab)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Gender") +
labs(y = "Count")
onlinePlot <- ggplot(hist, aes(x=id, fill=modes)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Mode") +
labs(y = "Count")
countryPlot <- ggplot(hist, aes(x=id, fill=country)) +
geom_histogram(binwidth = 250, position="stack") +
theme(legend.position="bottom") +
scale_fill_discrete(name="Country") +
labs(y = "Count")
# Combine all plots into one chart
figure <- ggarrange(effectsPlot, genderPlot, countryPlot, onlinePlot,
ncol = 1, nrow = 4, heights = c(2,1.3,1.3,1.3))
ggsave(figure, filename = "Figures/LASSO_plot_t1.png", device = "png", height = 8, width = 6)
set.seed(89)
vars <- c("percevaded", "taxrate", "gender_lab", "country", "modes", "offerdg", "mean.ncorrectret")
df_het <- df[df$auditrate == 0,vars]
# Define variables incl. outcome as column 1
df_het <- df_het[complete.cases(df_het[,vars]),]
# Convert to dummies for glmnet
df_het$gender_lab <- ifelse(df_het$gender_lab == "Female",1,0)
df_het$modes <- ifelse(df_het$modes == "Lab",1,0)
df_het$uk <- ifelse(df_het$country == "UK",1,0)
df_het$chile <- ifelse(df_het$country == "Chile",1,0)
df_het$russia <- ifelse(df_het$country == "Russia",1,0)
df_het$country <- NULL
Y <- df_het[,1]
X <- as.matrix(df_het[,-1])
# Build test dataset
test <- df_het[,-1]
test$taxrate <- 10
temp <- df_het[,-1]
temp$taxrate <- 20
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 30
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 40
test <- rbind(test,temp)
test <- as.matrix(test)
rm(temp)
# Run LASSO predictor algorithm
a0_lasso <- cv.glmnet(y = Y, x= X, alpha=1, family='gaussian')
# Predict on full schedule of possible treatment-covariate profiles
a0_lasso_pred <- predict(a0_lasso, newx = test)
View(a0_lasso_pred)
CATE_estimates <- df_het[,-1]
View(CATE_estimates)
CATE_estimates$country <- ifelse(CATE_estimates$uk == 1,"UK",
ifelse(CATE_estimates$chile == 1, "Chile",
ifelse(CATE_estimates$russia == 1, "Russia","USA")))
CATE_estimates$gender_lab <- ifelse(CATE_estimates$gender_lab == 1,"Female","Male")
CATE_estimates$uk <- NULL
CATE_estimates$chile <- NULL
CATE_estimates$russia <- NULL
CATE_estimates$gender_lab <- ifelse(CATE_estimates$gender_lab == 1,"Female","Male")
n <- length(test[,1])/4
CATE_estimates$y10 <- a0_lasso_pred[1:n]
CATE_estimates$y20 <- a0_lasso_pred[(n+1):(2*n)]
CATE_estimates$y30 <- a0_lasso_pred[(2*n+1):(3*n)]
CATE_estimates$y40 <- a0_lasso_pred[(3*n+1):(4*n)]
CATE_estimates$t1 <- CATE_estimates$y20 - CATE_estimates$y10
CATE_estimates$t2 <- CATE_estimates$y30 - CATE_estimates$y10
CATE_estimates$t3 <- CATE_estimates$y40 - CATE_estimates$y10
a0_rf_pred[1]
a0_rf_pred[1+n]
n <- length(test[,1])/4
a0_lasso_pred[1:n]
a0_lasso_pred[(n+1):(2*n)]
a0_lasso_pred[1:n]
a0_lasso_pred[(n+1):(2*n)]
#######################
### Random Forest
#######################
set.seed(89)
vars <- c("percevaded", "taxrate", "gender_lab", "country", "modes", "offerdg", "mean.ncorrectret")
df_het <- df[df$auditrate == 0,vars]
df_het$gender_lab <- as.factor(df_het$gender_lab)
df_het$modes <- as.factor(df_het$modes)
# Define variables incl. outcome as column 1
df_het <- df_het[complete.cases(df_het[,vars]),]
test <- df_het[,-1]
test$taxrate <- 10
temp <- df_het[,-1]
temp$taxrate <- 20
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 30
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 40
test <- rbind(test,temp)
rm(temp)
a0_rf <- randomForest(percevaded ~ ., data=df_het)
a0_rf_pred <- predict(a0_rf, newdata = test)
n <- length(test[,1])/4
CATE_estimates <- df_het[,-1] # get covar information
CATE_estimates$y10 <- a0_rf_pred[1:n]
CATE_estimates$y20 <- a0_rf_pred[(n+1):(2*n)]
CATE_estimates$y30 <- a0_rf_pred[(2*n+1):(3*n)]
CATE_estimates$y40 <- a0_rf_pred[(3*n+1):(4*n)]
CATE_estimates$t1 <- CATE_estimates$y20 - CATE_estimates$y10
CATE_estimates$t2 <- CATE_estimates$y30 - CATE_estimates$y10
CATE_estimates$t3 <- CATE_estimates$y40 - CATE_estimates$y10
View(CATE_estimates)
View(df_het)
View(df)
set.seed(89)
vars <- c("percevaded", "taxrate", "gender_lab", "country", "modes", "offerdg", "mean.ncorrectret")
df_het <- df[df$auditrate == 0,vars]
df_het <- df_het[complete.cases(df_het[,vars]),]
df_het$gender_lab <- ifelse(df_het$gender_lab == "Female",1,0)
df_het$modes <- ifelse(df_het$modes == "Lab",1,0)
df_het$uk <- ifelse(df_het$country == "UK",1,0)
df_het$chile <- ifelse(df_het$country == "Chile",1,0)
df_het$russia <- ifelse(df_het$country == "Russia",1,0)
df_het$country <- NULL
Y <- df_het[,1]
X <- as.matrix(df_het[,-1])
Y
X
test <- df_het[,-1]
test$taxrate <- 10
temp <- df_het[,-1]
temp$taxrate <- 20
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 30
test <- rbind(test,temp)
temp <- df_het[,-1]
temp$taxrate <- 40
test <- rbind(test,temp)
test <- as.matrix(test)
rm(temp)
View(test)
a0_lasso <- cv.glmnet(y = Y, x= X, alpha=1, family='gaussian')
a0_lasso_pred <- predict(a0_lasso, newx = test)
View(a0_lasso_pred)
a0_rf_pred
CATE_estimates <- df_het[,-1]
View(CATE_estimates)
CATE_estimates$country <- ifelse(CATE_estimates$uk == 1,"UK",
ifelse(CATE_estimates$chile == 1, "Chile",
ifelse(CATE_estimates$russia == 1, "Russia","USA")))
CATE_estimates$uk <- NULL
CATE_estimates$chile <- NULL
CATE_estimates$russia <- NULL
CATE_estimates$gender_lab <- ifelse(CATE_estimates$gender_lab == 1,"Female","Male")
CATE_estimates$modes <- ifelse(CATE_estimates$modes == 1,"Lab","Online")
n <- length(test[,1])/4
a0_lasso_pred[1:n]
a0_lasso_pred[(n+1):(2*n)]
n
a0_lasso_pred[n+1]
coef(a0_lasso_pred, s=a0_lasso_pred$lambda.lse)
a0_lasso <- cv.glmnet(y = Y, x= X, alpha=1, family='gaussian')
coef(a0_lasso, s=a0_lasso$lambda.lse)
coef(a0_lasso, s=a0_lasso$lambda.1se)
a0_lasso <- cv.glmnet(y = Y, x= X, alpha=1, family='binomial', type.measure = "mse")
a0_lasso <- cv.glmnet(y = Y, x= X, alpha=1, family='gaussian')
coef(a0_lasso, s=a0_lasso$lambda.1se)
set.seed(89)
vars <- c("percevaded", "taxrate", "gender_lab", "country", "modes", "offerdg", "mean.ncorrectret")
df_het <- df[df$auditrate > 0,vars]
# Define variables incl. outcome as column 1
df_het <- df_het[complete.cases(df_het[,vars]),]
# Convert to dummies for glmnet
df_het$gender_lab <- ifelse(df_het$gender_lab == "Female",1,0)
df_het$modes <- ifelse(df_het$modes == "Lab",1,0)
df_het$uk <- ifelse(df_het$country == "UK",1,0)
df_het$chile <- ifelse(df_het$country == "Chile",1,0)
df_het$russia <- ifelse(df_het$country == "Russia",1,0)
df_het$country <- NULL
Y <- df_het[,1]
X <- as.matrix(df_het[,-1])
# Run LASSO predictor algorithm
a0_lasso <- cv.glmnet(y = Y, x= X, alpha=1, family='gaussian')
coef(a0_lasso, s=a0_lasso$lambda.1se)
coef(a0_lasso, s = a0_lasso$lambda.1se)
coef(a0_lasso, s = a0_lasso$lambda.1se)
coef(a0_lasso, s = a0_lasso$lambda.1se)
set.seed(89)
vars <- c("percevaded", "taxrate", "gender_lab", "country", "modes", "offerdg", "mean.ncorrectret")
df_het <- df[df$auditrate == 0,vars]
# Define variables incl. outcome as column 1
df_het <- df_het[complete.cases(df_het[,vars]),]
# Convert to dummies for glmnet
df_het$gender_lab <- ifelse(df_het$gender_lab == "Female",1,0)
df_het$modes <- ifelse(df_het$modes == "Lab",1,0)
df_het$uk <- ifelse(df_het$country == "UK",1,0)
df_het$chile <- ifelse(df_het$country == "Chile",1,0)
df_het$russia <- ifelse(df_het$country == "Russia",1,0)
df_het$country <- NULL
Y <- df_het[,1]
X <- as.matrix(df_het[,-1])
# Run LASSO predictor algorithm
a0_lasso <- cv.glmnet(y = Y, x= X, alpha=1, family='gaussian')
# Output of model
coef(a0_lasso, s = a0_lasso$lambda.1se)
